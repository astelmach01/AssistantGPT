version: '3.11.4'

services:
  api:
    build:
      context: .
      dockerfile: ./deploy/Dockerfile
      target: prod
    image: backend:${BACKEND_VERSION:-latest}
    restart: always
    env_file:
    - .env
    depends_on:
      db:
        condition: service_healthy
      rmq:
        condition: service_healthy
    environment:
      BACKEND_HOST: 0.0.0.0
      BACKEND_DB_HOST: app-db
      BACKEND_DB_PORT: 3306
      BACKEND_DB_USER: app
      BACKEND_DB_PASS: app
      BACKEND_DB_BASE: app
      BACKEND_RABBIT_HOST: app-rmq

  db:
    image: bitnami/mysql:8.0.30
    hostname: app-db
    restart: always
    environment:
      MYSQL_ROOT_USER: "app"
      MYSQL_ROOT_PASSWORD: "app"
      MYSQL_DATABASE: "app"
      MYSQL_AUTHENTICATION_PLUGIN: "mysql_native_password"
    healthcheck:
      test: mysqladmin ping -h localhost
      interval: 10s
      timeout: 5s
      retries: 40
    volumes:
    - app-db-data:/bitnami/mysql/data

  rmq:
    image: rabbitmq:3.9.16-alpine
    hostname: "app-rmq"
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
      RABBITMQ_DEFAULT_VHOST: "/"
    healthcheck:
      test: rabbitmq-diagnostics check_running -q
      interval: 3s
      timeout: 3s
      retries: 50



volumes:
  backend-db-data:
    name: app-db-data
