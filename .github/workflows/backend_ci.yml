name: AssistantGPT Backend

on:
  pull_request:
    paths:
      - 'backend/**' # Only trigger the workflow if changes are made in the backend folder

jobs:
  CI:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v2
        id: cache-venv  # name for referring later
        with:
          path: ./.venv/  # what we cache: the virtualenv
          # The cache key depends on requirements.txt
          key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-venv-
      # Build a virtualenv, but only if it doesn't already exist
      - run: python -m venv ./.venv && . ./.venv/bin/activate &&
          pip install -r requirements.txt
        if: steps.cache-venv.outputs.cache-hit != 'true'
      # Run tests
      # Note that you have to activate the virtualenv in every step
      # because GitHub actions doesn't preserve the environment
      - name: Lint with flake8
        run: |
          # Stop the build if there are Python syntax errors or undefined names
          . ./.venv/bin/activate && flake8 --count --select=E9,F63,F7,F82 --show-source --statistics
          # Exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          . ./.venv/bin/activate && flake8 --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          . .venv/bin/activate && pytest
